apiVersion: v1
kind: PersistentVolume
metadata:
  name: rocket-storage-pv
  labels:
    types: local
spec:
  storageClassName: manual
  capacity:
    storage: 300Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/rocket-chat/storage"

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: rocket-storage-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 300Mi

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongodb-storage-pv
  labels:
    types: local
spec:
  storageClassName: manual
  capacity:
    storage: 300Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/rocket-chat/storage"

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mongodb-storage-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 300Mi

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  serviceName: "mongo"
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  # strategy:
  #   type: Recreate
  template:
    metadata:
      labels:
        app: mongo
        role: mongo
        environment: test
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongo
          image: vengelmann/mongo-rs0:latest
          env:
            # - name: MONGO_INITDB_ROOT_USERNAME
            #   value: root
            # - name: MONGO_INITDB_ROOT_PASSWORD
            #   value: passwd
            - name: MONGO_INITDB_DATABASE
              value: rocketchat
          command: ["mongod", "--nojournal", "--bind_ip_all", "--replSet", "rs0", "--bind_ip", "0.0.0.0"]
          resources:
            limits: { memory: "100Mi", cpu: "100m" }
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongodb-storage
              mountPath: /data/db
          readinessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            timeoutSeconds: 5
        - name: mongo-sidecar
          image: cvallance/mongo-k8s-sidecar
          env:
            - name: MONGO_SIDECAR_POD_LABELS
              value: "role=mongo,environment=test"
      volumes:
      - name: mongodb-storage
        persistentVolumeClaim:
          claimName: mongodb-storage-pv-claim

---
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
# NOTE:omitting type: LoadBalancer
  selector:
    app: mongo
  ports:
    - port: 27017

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rocket-chat
  labels:
    app: rocket-chat
spec:
  selector:
    matchLabels:
      app: rocket-chat
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: rocket-chat
    spec:
      containers:
        - name: rocket-chat
          image: rocket.chat:latest
          env:
            - name: PORT
              value: "3000"
            - name: MONGO_URL
              value: mongodb://mongo-0:27017/rocketchat
            - name: INSTANCE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          resources:
            requests: { memory: "400Mi", cpu: "190m" }
            limits: { memory: "1024Mi", cpu: "190m" }
          ports:
            - containerPort: 3000
          volumeMounts:
          - name: rocket-storage
            mountPath: /app/uploads
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 15
      volumes:
        - name: rocket-storage
          persistentVolumeClaim:
            claimName: rocket-storage-pv-claim

---
apiVersion: v1
kind: Service
metadata:
  name: rocket-chat
spec:
  type: LoadBalancer
  loadBalancerIP: 192.168.1.47
  selector:
    app: rocket-chat
  ports:
    - name: http
      port: 3000
      targetPort: 3000